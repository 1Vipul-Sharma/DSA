//Brute

vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        int n1=nums1.size();
        vector<int> ans(n1,-1);
        int n2=nums2.size();
        for(int i=0;i<n1;i++){
            for(int j=0;j<n2;j++){
                if(nums1[i]==nums2[j]) {
                    j++;
                    while(j<n2){
                        if(nums2[j]>nums1[i]) {
                            ans[i]=nums2[j];
                            break;
                        }
                        j++;
                    }
                    break;
                }
            }
        }
        return ans;
    }

//using map to store nge and stack to find nge
     vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        // vector<int> nge(n,-1);
        unordered_map<int,int> nge;
        stack<int> s;
        int n=nums2.size();
        s.push(nums2[n-1]);
        nge[nums2[n-1]]=-1;
        for(int i=n-2;i>=0;i--){
            while(s.empty()==false && s.top()<=nums2[i]){
                s.pop();
            }
            if(s.empty()==false) nge[nums2[i]]=s.top(); 
            else nge[nums2[i]]=-1;
            s.push(nums2[i]);
        }
        for(int i=0;i<nums1.size();i++){
            nums1[i]=nge[nums1[i]];
        }
        return nums1;
    }