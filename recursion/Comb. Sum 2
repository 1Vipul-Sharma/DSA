class Solution {
public:
    void helper(vector<int>& c,int tar,int idx,vector<vector<int>> &res,vector<int> ds){
        if(tar==0){
            res.push_back(ds);
            return;
        }
        for(int i=idx;i<c.size();i++){
            if(i>idx && c[i]==c[i-1]) continue;
            if(c[i]>tar) break;
            ds.push_back(c[i]);
            helper(c,tar-c[i],i+1,res,ds);
            ds.pop_back();
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
        vector<vector<int>> res;
        sort(candidates.begin(),candidates.end());
        vector<int> ds;
        helper(candidates,target,0,res,{});
        return res;
    }
};